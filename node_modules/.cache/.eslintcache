[{"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/index.js":"1","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/Main.js":"2","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/reportWebVitals.js":"3","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/Home.js":"4","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/Navbar.js":"5","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/Test.js":"6","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/Contact.js":"7","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/Backend.js":"8","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/pageComponents/Textbox.js":"9","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/pageComponents/Key.js":"10","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/pageComponents/TextAnalysis.js":"11","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/pageComponents/TestingStyles.js":"12"},{"size":457,"mtime":1637208348389,"results":"13","hashOfConfig":"14"},{"size":492,"mtime":1637208348389,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1637208348397,"results":"16","hashOfConfig":"14"},{"size":737,"mtime":1637208348389,"results":"17","hashOfConfig":"14"},{"size":574,"mtime":1637208348389,"results":"18","hashOfConfig":"14"},{"size":439,"mtime":1637208348389,"results":"19","hashOfConfig":"14"},{"size":9373,"mtime":1637208348389,"results":"20","hashOfConfig":"14"},{"size":4848,"mtime":1637209541063,"results":"21","hashOfConfig":"14"},{"size":1404,"mtime":1637210469267,"results":"22","hashOfConfig":"14"},{"size":504,"mtime":1637208348389,"results":"23","hashOfConfig":"14"},{"size":1122,"mtime":1637212649079,"results":"24","hashOfConfig":"14"},{"size":370,"mtime":1637208348389,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vkluf6",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/index.js",[],["55","56"],"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/Main.js",["57","58","59"],"import React from \"react\";\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport Home from './pages/Home'\nimport Contact from './pages/Contact'\nimport Test from './pages/Test'\nimport Navbar from './pages/Navbar'\n\nconst Main = () => {\n    return(\n        <BrowserRouter>\n\t    <Navbar/>\n                <Route exact path='/' exact component={Home}/> \n                <Route exact path='/contact' exact component={Contact}/> \n        </BrowserRouter>\n\n    );\n\n\n}\nexport default Main;\n","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/reportWebVitals.js",[],"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/Home.js",["60","61","62"],"import \"../style/style.css\"\nimport React from \"react\"\nimport hash from \"../Backend\"\nimport {Backend} from \"../Backend\"\nimport { Link } from \"react-router-dom\";\nimport Textbox from \"./pageComponents/Textbox\"\nimport TextAnalysis from \"./pageComponents/TextAnalysis\";\nimport Key from \"./pageComponents/Key\";\nimport TestingStyles from \"./pageComponents/TestingStyles\";\n\nclass Home extends React.Component {\n\trender() {\n\t\tBackend();\n\t\treturn(\n\t\t<div>\n\t\t\t\n\t\t    <main>\n\t\t\t<body>\t\t\n\n\t\t     <div class=\"flex-container\">\n\t\t\t<div class=\"flex-child\">\t\n\t\t\t\t<br/>\n\t\t\t\t <Textbox />\n\t\t\t</div>\n\t\t<div class=\"flex-child\">\n\t\t<br/>\n\t\t<TextAnalysis />\n\t\t<br/>\n\t\t<Key />\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</body>\n\t\t\t</main>\n\n\n\t\t</div>\n\n\t\t)\n\n\t}\n\n\n}\nexport default Home;\n","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/Navbar.js",[],"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/Test.js",[],"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/Contact.js",[],"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/Backend.js",["63","64","65","66","67","68","69","70","71"],"import './App.css';\nimport {GetWordCount} from './pages/pageComponents/Textbox.js'\n\n// key is hash(word), value is list of language(s) in shorthand\nlet dictionary = {};\nlet seperatorChar = ':';\nlet a = 0; // Romance\nlet b = 0; // Germanic\nlet c = 0; // Other\nlet d = 0; // Total Number of Words\nlet text = \"Finally some sun under the clouds!\";\nexport function Backend() {\n  ParseDictionary();\n  TestParseDictionary();\n  SeparateInput(text); // PROBLEM: ONLY THIS CALL TO SEPERATEINPUT WILL BE PROCESSED (in the constructor), OTHER CALLS TO SEPERATEINPUT IN OTHER FILES CURRENTLY NOT WORKING\n}\n// returns true if dictionary contains word.\nexport function HasWord(wordP){\n  if(dictionary[Hash(wordP)] == null){\n    return false;\n  }\n  else{\n    return true;\n  }\n}\n\n\n\n// returns Romance, Germanic, or Other given a word\nexport function GetValue(wordP){\n  let num = dictionary[Hash(wordP)];\n  if(num == 0){\n    return \"Romance\";\n  }\n  if(num == 1){\n    return \"Germanic\";\n  }\n  return \"Other\";\n}\n// returns 0, 1, or 2 given a word. same as function above\nexport function GetValueNumber(wordP){\n  let num = dictionary[Hash(wordP)];\n  return num;\n}\n\n// given a single string of words seperated by spaces, returns list of valid words\nexport function SeparateInput(stringP){\n  if(stringP.length == 0){\n    return null;\n  }\n  let strings = stringP.split(\" \");\n  a = 0;\n  b = 0;\n  c = 0;\n  d = 0;\n  let i = 0;\n  for(i = 0; i < strings.length; i++){ // for each word\n    let newString = \"\";\n    for(let j = 0; j < strings[i].length; j++){ // for each char\n      let c = strings[i].charCodeAt(j);\n      let updatedC;\n      if(c > 64 && c < 91){ //If char is uppercase\n        updatedC = String.fromCharCode(c + 32); // Make lowercase\n        newString += updatedC; //Add to newstring\n      }\n      else if ((c < 65 || c > 122 ) || (c > 90 && c < 97)){ // If char is not alphabetic\n        //do nothing\n      }\n      else{\n        newString += String.fromCharCode(c); //Add to newstring\n      }\n    }\n    strings[i] = newString; // Add newstring to strings\n  }\n  for(i = 0; i < strings.length; i++){\n    if(HasWord(strings[i])){ // Checks if the word's hash is in the dictionary\n      if(GetValueNumber(strings[i]) == 0){ // If the word's etymology is romance\n        a = a + 1;\n      }\n      else if(GetValueNumber(strings[i]) == 1){ // If the word's etymology is germanic\n        b = b + 1;\n      }\n      else{\n        // to do: check for words ending in s (plural) or other odd endings\n        c = c + 1;\n      }\n    }\n    else{\n    //  alert(\"Doesn't have word!\")\n      c = c + 1;\n    }\n    d = d + 1; // d represents total words parsed\n  }\n//  alert(\"Incoming value of strings from SeparateInput:\")\n//  alert(strings)\n  return strings; //strings works exactly as it should\n}\n\nexport function EtymCountTest(){\n  let etymList = [a, b, c, d];\n  return etymList;\n}\n\nexport function GetRomancePercent(){ // a is zero when it shouldn't be\n//  alert(\"All words in the etymology dictionary incoming:\")\n//  alert(JSON.stringify(dictionary))\n  let percent = 0.0;\n  if(d == 0){\n\t  return percent;\n  }\n  percent = a / d;\n  percent = percent * 100;\n  return Math.round(percent);\n}\n\nexport function GetGermanicPercent(){\n  let percent = 0.0;\n  if(d == 0){\n\t  return percent;\n  }\n  percent = b / d;\n  percent = percent * 100;\n  return Math.round(percent);\n}\nexport function GetOtherPercent(){\n  let percent = 0.0;\n  if(d == 0){\n\t  return percent;\n  }\n  percent = c / d;\n  percent = percent * 100;\n  return Math.round(percent); //Pass from GetOtherPercent to frontend works\n}\n\n//\n// IT IS SAFE TO IGNORE ALL BELOW CODE\n//\n//hash function code provided by the internet\nexport function Hash(stringP){\n  let h = 0;\n  let i = 0;\n  for(i = 0; i < stringP.length; i++){\n    let ch = stringP.charCodeAt(i);\n    h = ((h << 5) - h) + ch;\n    h = h & h;\n  }\n  return h;\n}\n\nexport function TestParseDictionary(){\n  dictionary[Hash(\"president\")] = \"0\";\n}\n\n// opens text file, reads each line, and saves information to dictionary\nexport function ParseDictionary(){\n  let rawFile = new XMLHttpRequest();\n  let path = \"./dictionary.txt\";\n  rawFile.open(\"GET\", path, false);\n  rawFile.onreadystatechange = function(){\n    if(rawFile.readyState === 4){\n      if(rawFile.status === 200 || rawFile.status === 0){\n        let allText = rawFile.responseText;\n        while(allText.includes(\"\\n\")){\n          let line = allText.substring(0, allText.indexOf(\"\\n\"));\n          let curWord = line.substring(0, line.indexOf(seperatorChar));\n          let remainder = line.substring(line.indexOf(seperatorChar) + 1);\n          dictionary[Hash(curWord)] = remainder.substr(0, 1);\n          //alert(\"dictionary: \")\n          //alert(dictionary)\n          allText = allText.substring(allText.indexOf(\"\\n\") + 1);\n        }\n      }\n    }\n    else {\n    }\n  }\n  rawFile.send();\n}\n\nexport default Backend;\n","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/pageComponents/Textbox.js",["72"],"import React from \"react\";\nimport \"../../style/style.css\"\nimport {SeparateInput} from \"../../Backend.js\"\nexport let wordCount\n\nclass Textbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wordCount: 0,\n      text: \"\"\n    };\n    this.updateWordCount = this.updateWordCount.bind(this)\n  }\n\n  updateWordCount(textarea) {\n    let text = textarea.target.value;\n    this.setState({ wordCount: this.countWords(text)});\n    if(SeparateInput(text) != null && SeparateInput(text) < 1){ //Makes sure we're not trying to read the length of a null object, which would produce an error.\n      wordCount = SeparateInput(text).length;\n    }\n    else {\n      wordCount = 0;\n    }\n  }\n\n  countWords(text) {\n    if(!text.length){\n      return 0;\n    }\n    if(text[text.length-1] != \" \"){\n      return text.split(' ').length;\n    }\n    else {\n      return text.split(' ').length - 1;\n    }\n  }\n\n\n\n  render() {\n    return (\n        <div>\n                <textarea\n                className=\"inputBox\"\n                id=\"textBox\"\n                name=\"textBox\"\n                rows=\"17\"\n                cols=\"75\"\n                placeholder=\"Type or paste text here\"\n                onChange={this.updateWordCount}\n                ></textarea>\n            <div class=\"wordCount\">Word Count: {this.state.wordCount}</div>\n        </div>\n      \n    );\n  }\n}\n\nexport default Textbox;\n","/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/pageComponents/Key.js",[],"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/pageComponents/TextAnalysis.js",[],"/home/sean/Documents/Programs/CodersSB/benjaminhsieh2002.github.io/src/pages/pageComponents/TestingStyles.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":13,"column":39,"nodeType":"83","messageId":"84","endLine":13,"endColumn":44},{"ruleId":"81","severity":1,"message":"82","line":14,"column":46,"nodeType":"83","messageId":"84","endLine":14,"endColumn":51},{"ruleId":"77","severity":1,"message":"85","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":12},{"ruleId":"77","severity":1,"message":"86","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":14},{"ruleId":"77","severity":1,"message":"87","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":21},{"ruleId":"77","severity":1,"message":"88","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":32,"column":10,"nodeType":"91","messageId":"92","endLine":32,"endColumn":12},{"ruleId":"89","severity":1,"message":"90","line":35,"column":10,"nodeType":"91","messageId":"92","endLine":35,"endColumn":12},{"ruleId":"89","severity":1,"message":"90","line":48,"column":21,"nodeType":"91","messageId":"92","endLine":48,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":77,"column":37,"nodeType":"91","messageId":"92","endLine":77,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":80,"column":42,"nodeType":"91","messageId":"92","endLine":80,"endColumn":44},{"ruleId":"89","severity":1,"message":"90","line":108,"column":8,"nodeType":"91","messageId":"92","endLine":108,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":118,"column":8,"nodeType":"91","messageId":"92","endLine":118,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":127,"column":8,"nodeType":"91","messageId":"92","endLine":127,"endColumn":10},{"ruleId":"89","severity":1,"message":"93","line":31,"column":28,"nodeType":"91","messageId":"92","endLine":31,"endColumn":30},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'hash' is defined but never used.","'Link' is defined but never used.","'TestingStyles' is defined but never used.","'GetWordCount' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]